{"ast":null,"code":"var _jsxFileName = \"/Users/luisdonaldogallosotapia/Desktop/training/react/todoapp/src/Components/List.jsx\",\n  _s = $RefreshSig$();\nimport ListItem from \"./ListItem\";\nimport { TodosContext } from \"../App\";\nimport { useContext } from \"react\";\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const {\n    Todos\n  } = useContext(TodosContext);\n  const [itemOffset, setItemOffset] = useState(0);\n\n  // Simulate fetching items from another resources.\n  // (This could be items from props; or items loaded in a local state\n  // from an API endpoint with useEffect and useState)\n  const endOffset = itemOffset + itemsPerPage;\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-5\",\n    children: [Todos.map(todo => /*#__PURE__*/_jsxDEV(ListItem, {\n      id: todo.id,\n      name: todo.name,\n      status: todo.status,\n      description: todo.description\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"JF5NW5jbk2vBoebSLnlA7GUGyfk=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["ListItem","TodosContext","useContext","ReactPaginate","jsxDEV","_jsxDEV","List","_s","Todos","itemOffset","setItemOffset","useState","endOffset","itemsPerPage","console","log","currentItems","items","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected","className","children","map","todo","id","name","status","description","fileName","_jsxFileName","lineNumber","columnNumber","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","_c","$RefreshReg$"],"sources":["/Users/luisdonaldogallosotapia/Desktop/training/react/todoapp/src/Components/List.jsx"],"sourcesContent":["import ListItem from \"./ListItem\";\nimport { TodosContext } from \"../App\";\nimport { useContext } from \"react\";\nimport ReactPaginate from 'react-paginate';\n\nconst List = () =>{\n    const {Todos} = useContext(TodosContext);\n\n    const [itemOffset, setItemOffset] = useState(0);\n\n    // Simulate fetching items from another resources.\n    // (This could be items from props; or items loaded in a local state\n    // from an API endpoint with useEffect and useState)\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    const currentItems = items.slice(itemOffset, endOffset);\n    const pageCount = Math.ceil(items.length / itemsPerPage);\n  \n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      console.log(\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\n      );\n      setItemOffset(newOffset);\n    };\n\n    return(\n        <div className=\"mx-5\">\n           {Todos.map(todo =>(\n            <ListItem key={todo.id} id={todo.id} name={todo.name} status={todo.status} description={todo.description}/>\n           ))}\n            <ReactPaginate\n            breakLabel=\"...\"\n            nextLabel=\"next >\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            pageCount={pageCount}\n            previousLabel=\"< previous\"\n            renderOnZeroPageCount={null}\n            />\n        </div>\n    );\n}\n\nexport default List;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACd,MAAM;IAACC;EAAK,CAAC,GAAGN,UAAU,CAACD,YAAY,CAAC;EAExC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA;EACA;EACA,MAAMC,SAAS,GAAGH,UAAU,GAAGI,YAAY;EAC3CC,OAAO,CAACC,GAAG,CAAE,sBAAqBN,UAAW,OAAMG,SAAU,EAAC,CAAC;EAC/D,MAAMI,YAAY,GAAGC,KAAK,CAACC,KAAK,CAACT,UAAU,EAAEG,SAAS,CAAC;EACvD,MAAMO,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACJ,KAAK,CAACK,MAAM,GAAGT,YAAY,CAAC;;EAExD;EACA,MAAMU,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAQ,GAAGb,YAAY,GAAII,KAAK,CAACK,MAAM;IAChER,OAAO,CAACC,GAAG,CACR,8BAA6BS,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAAC,CAC7E;IACDf,aAAa,CAACe,SAAS,CAAC;EAC1B,CAAC;EAED,oBACIpB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,GACjBpB,KAAK,CAACqB,GAAG,CAACC,IAAI,iBACdzB,OAAA,CAACL,QAAQ;MAAe+B,EAAE,EAAED,IAAI,CAACC,EAAG;MAACC,IAAI,EAAEF,IAAI,CAACE,IAAK;MAACC,MAAM,EAAEH,IAAI,CAACG,MAAO;MAACC,WAAW,EAAEJ,IAAI,CAACI;IAAY,GAA1FJ,IAAI,CAACC,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB,CAAC,eACDjC,OAAA,CAACF,aAAa;MACdoC,UAAU,EAAC,KAAK;MAChBC,SAAS,EAAC,QAAQ;MAClBC,YAAY,EAAElB,eAAgB;MAC9BmB,kBAAkB,EAAE,CAAE;MACtBvB,SAAS,EAAEA,SAAU;MACrBwB,aAAa,EAAC,YAAY;MAC1BC,qBAAqB,EAAE;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAAA/B,EAAA,CAtCKD,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AAwCV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}